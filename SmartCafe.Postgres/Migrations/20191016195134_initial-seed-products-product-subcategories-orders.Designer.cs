// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartCafe.Postgres.Models;

namespace SmartCafe.Postgres.Migrations
{
    [DbContext(typeof(SmartCafeContext))]
    [Migration("20191016195134_initial-seed-products-product-subcategories-orders")]
    partial class initialseedproductsproductsubcategoriesorders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SmartCafe.Postgres.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Piće"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hrana"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cigarete"
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.OrderItems", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("OrderId", "ProductId")
                        .HasName("order_items_pkey");

                    b.HasIndex("ProductId");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsClosed")
                        .HasColumnName("is_closed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("order_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TableId")
                        .HasColumnName("table_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.ProductCategories", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnName("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ProductId", "CategoryId")
                        .HasName("product_categories_pkey1");

                    b.HasIndex("CategoryId");

                    b.ToTable("product_categories");
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.ProductSubCategories", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("SubCategoryId")
                        .HasColumnName("sub_category_id")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ProductId", "SubCategoryId")
                        .HasName("product_sub_categories_pkey1");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("product_sub_categories");
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string[]>("Allergens")
                        .HasColumnName("allergens")
                        .HasColumnType("text[]");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsPromo")
                        .HasColumnName("is_promo")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecommended")
                        .HasColumnName("is_recommended")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("PriceWithVat")
                        .HasColumnName("price_with_vat")
                        .HasColumnType("numeric(15,2)");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Uganda",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Sleek Wooden Chips",
                            PriceWithVat = 872.886938449408000m
                        },
                        new
                        {
                            Id = 2,
                            Allergens = new[] { "badem" },
                            Description = "Fantastic Metal Computer Tennessee Money Market Account",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Intelligent Cotton Gloves",
                            PriceWithVat = 218.016418729916000m
                        },
                        new
                        {
                            Id = 3,
                            Allergens = new[] { "kikiriki" },
                            Description = "Refined",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Sleek Concrete Bike",
                            PriceWithVat = 442.433614489824000m
                        },
                        new
                        {
                            Id = 4,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "Rubber",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Sleek Steel Soap",
                            PriceWithVat = 906.031973150574000m
                        },
                        new
                        {
                            Id = 5,
                            Allergens = new[] { "badem" },
                            Description = "Accountability synthesizing",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Sleek Steel Chicken",
                            PriceWithVat = 23.7438702135085000m
                        },
                        new
                        {
                            Id = 6,
                            Allergens = new[] { "lešnik" },
                            Description = "Director Fantastic Frozen Fish",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Sleek Plastic Salad",
                            PriceWithVat = 569.547917027747000m
                        },
                        new
                        {
                            Id = 7,
                            Allergens = new[] { "kikiriki" },
                            Description = "Group",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Awesome Wooden Soap",
                            PriceWithVat = 748.153017716554000m
                        },
                        new
                        {
                            Id = 8,
                            Allergens = new[] { "kikiriki" },
                            Description = "Gardens quantifying Awesome",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Sleek Steel Salad",
                            PriceWithVat = 814.439348790068000m
                        },
                        new
                        {
                            Id = 9,
                            Allergens = new[] { "kikiriki" },
                            Description = "innovative Garden, Baby & Games",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Refined Cotton Shirt",
                            PriceWithVat = 842.125500013179000m
                        },
                        new
                        {
                            Id = 10,
                            Allergens = new[] { "kikiriki" },
                            Description = "Bedfordshire",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Handmade Wooden Hat",
                            PriceWithVat = 270.584369204279000m
                        },
                        new
                        {
                            Id = 11,
                            Allergens = new[] { "badem" },
                            Description = "quantifying capacity",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Refined Wooden Chips",
                            PriceWithVat = 573.87665546214000m
                        },
                        new
                        {
                            Id = 12,
                            Allergens = new[] { "kikiriki", "lešnik" },
                            Description = "Forks black Clothing, Electronics & Grocery",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Handmade Metal Bike",
                            PriceWithVat = 822.884162339794000m
                        },
                        new
                        {
                            Id = 13,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "eco-centric magenta",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Fantastic Wooden Tuna",
                            PriceWithVat = 488.334485557086000m
                        },
                        new
                        {
                            Id = 14,
                            Allergens = new[] { "kikiriki" },
                            Description = "Automotive & Electronics Montenegro",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Gorgeous Fresh Fish",
                            PriceWithVat = 81.1766703059788000m
                        },
                        new
                        {
                            Id = 15,
                            Allergens = new[] { "kikiriki" },
                            Description = "silver",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Sleek Rubber Shoes",
                            PriceWithVat = 843.492578176545000m
                        },
                        new
                        {
                            Id = 16,
                            Allergens = new[] { "kikiriki" },
                            Description = "system Engineer",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Tasty Granite Shirt",
                            PriceWithVat = 409.624190726142000m
                        },
                        new
                        {
                            Id = 17,
                            Allergens = new[] { "kikiriki" },
                            Description = "invoice",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Tasty Steel Shirt",
                            PriceWithVat = 577.785702225652000m
                        },
                        new
                        {
                            Id = 18,
                            Allergens = new[] { "badem" },
                            Description = "Home & Grocery quantify",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Tasty Concrete Salad",
                            PriceWithVat = 264.694413759138000m
                        },
                        new
                        {
                            Id = 19,
                            Allergens = new[] { "lešnik" },
                            Description = "parallelism withdrawal Investment Account",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Licensed Wooden Computer",
                            PriceWithVat = 616.20575683946000m
                        },
                        new
                        {
                            Id = 20,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "revolutionize Tasty Fresh Computer",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Ergonomic Cotton Bacon",
                            PriceWithVat = 492.056267099481000m
                        },
                        new
                        {
                            Id = 21,
                            Allergens = new[] { "kikiriki", "lešnik" },
                            Description = "Island user-facing",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Awesome Steel Computer",
                            PriceWithVat = 304.346460990769000m
                        },
                        new
                        {
                            Id = 22,
                            Allergens = new[] { "lešnik", "kikiriki" },
                            Description = "Generic Concrete Car",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Tasty Granite Bike",
                            PriceWithVat = 281.236750204692000m
                        },
                        new
                        {
                            Id = 23,
                            Allergens = new[] { "kikiriki" },
                            Description = "JSON B2B Gabon",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Tasty Wooden Bike",
                            PriceWithVat = 850.589542580112000m
                        },
                        new
                        {
                            Id = 24,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "New York",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Rustic Rubber Towels",
                            PriceWithVat = 152.305598907315000m
                        },
                        new
                        {
                            Id = 25,
                            Allergens = new[] { "lešnik" },
                            Description = "Concrete Graphic Interface Handcrafted",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Practical Steel Hat",
                            PriceWithVat = 482.267384176267000m
                        },
                        new
                        {
                            Id = 26,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "content cultivate interface",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Handcrafted Rubber Keyboard",
                            PriceWithVat = 90.0823469693225000m
                        },
                        new
                        {
                            Id = 27,
                            Allergens = new[] { "kikiriki" },
                            Description = "SSL Planner",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Intelligent Concrete Pants",
                            PriceWithVat = 726.1748633935000m
                        },
                        new
                        {
                            Id = 28,
                            Allergens = new[] { "kikiriki" },
                            Description = "deploy",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Intelligent Metal Soap",
                            PriceWithVat = 841.82738505389000m
                        },
                        new
                        {
                            Id = 29,
                            Allergens = new[] { "lešnik" },
                            Description = "Games, Clothing & Movies Sleek Concrete Towels",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Rustic Steel Fish",
                            PriceWithVat = 934.879282924756000m
                        },
                        new
                        {
                            Id = 30,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Gorgeous Wooden Mouse panel",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Incredible Steel Car",
                            PriceWithVat = 499.056815402143000m
                        },
                        new
                        {
                            Id = 31,
                            Allergens = new[] { "badem", "lešnik" },
                            Description = "Music & Home Grocery, Books & Home",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Refined Granite Shirt",
                            PriceWithVat = 558.104182387751000m
                        },
                        new
                        {
                            Id = 32,
                            Allergens = new[] { "lešnik" },
                            Description = "Kentucky EXE",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Rustic Rubber Car",
                            PriceWithVat = 455.612551633088000m
                        },
                        new
                        {
                            Id = 33,
                            Allergens = new[] { "lešnik" },
                            Description = "portals Tonga invoice",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Practical Fresh Tuna",
                            PriceWithVat = 784.678290497828000m
                        },
                        new
                        {
                            Id = 34,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "expedite",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Rustic Rubber Table",
                            PriceWithVat = 118.774066268827000m
                        },
                        new
                        {
                            Id = 35,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Corners Officer payment",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Practical Concrete Soap",
                            PriceWithVat = 111.779141291873000m
                        },
                        new
                        {
                            Id = 36,
                            Allergens = new[] { "lešnik" },
                            Description = "Buckinghamshire",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Handcrafted Concrete Ball",
                            PriceWithVat = 688.078402396328000m
                        },
                        new
                        {
                            Id = 37,
                            Allergens = new[] { "kikiriki" },
                            Description = "Row Bedfordshire redundant",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Practical Concrete Bacon",
                            PriceWithVat = 442.507116330092000m
                        },
                        new
                        {
                            Id = 38,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "override hacking",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Unbranded Concrete Towels",
                            PriceWithVat = 416.049195647263000m
                        },
                        new
                        {
                            Id = 39,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "Games, Grocery & Electronics THX",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Licensed Frozen Tuna",
                            PriceWithVat = 396.157105637787000m
                        },
                        new
                        {
                            Id = 40,
                            Allergens = new[] { "kikiriki" },
                            Description = "Personal Loan Account Buckinghamshire portals",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Fantastic Concrete Pants",
                            PriceWithVat = 255.923392835969000m
                        },
                        new
                        {
                            Id = 41,
                            Allergens = new[] { "kikiriki" },
                            Description = "Dynamic Niue Tunnel",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Practical Soft Soap",
                            PriceWithVat = 480.837147906812000m
                        },
                        new
                        {
                            Id = 42,
                            Allergens = new[] { "kikiriki" },
                            Description = "Taka",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Handcrafted Fresh Pants",
                            PriceWithVat = 26.207264524981000m
                        },
                        new
                        {
                            Id = 43,
                            Allergens = new[] { "kikiriki" },
                            Description = "Exclusive",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Tasty Steel Gloves",
                            PriceWithVat = 763.144644332651000m
                        },
                        new
                        {
                            Id = 44,
                            Allergens = new[] { "kikiriki" },
                            Description = "Practical Granite Fish connect uniform",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Handmade Wooden Chair",
                            PriceWithVat = 389.165290812573000m
                        },
                        new
                        {
                            Id = 45,
                            Allergens = new[] { "kikiriki" },
                            Description = "Dominican Peso",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Rustic Metal Soap",
                            PriceWithVat = 472.953015692976000m
                        },
                        new
                        {
                            Id = 46,
                            Allergens = new[] { "lešnik" },
                            Description = "Innovative",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Fantastic Concrete Computer",
                            PriceWithVat = 249.300500494102000m
                        },
                        new
                        {
                            Id = 47,
                            Allergens = new[] { "badem", "lešnik" },
                            Description = "HTTP",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Awesome Plastic Chips",
                            PriceWithVat = 624.972580291784000m
                        },
                        new
                        {
                            Id = 48,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "COM",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Handmade Fresh Bacon",
                            PriceWithVat = 934.573860342882000m
                        },
                        new
                        {
                            Id = 49,
                            Allergens = new[] { "kikiriki" },
                            Description = "Afghani",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Incredible Rubber Pants",
                            PriceWithVat = 214.756028361039000m
                        },
                        new
                        {
                            Id = 50,
                            Allergens = new[] { "kikiriki" },
                            Description = "Rubber Gibraltar Pound Idaho",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Practical Steel Chair",
                            PriceWithVat = 701.875798265392000m
                        },
                        new
                        {
                            Id = 51,
                            Allergens = new[] { "kikiriki" },
                            Description = "optimal deposit productize",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Fantastic Rubber Mouse",
                            PriceWithVat = 406.595196764262000m
                        },
                        new
                        {
                            Id = 52,
                            Allergens = new[] { "lešnik" },
                            Description = "B2C neural scale",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Generic Metal Chips",
                            PriceWithVat = 974.09946982474000m
                        },
                        new
                        {
                            Id = 53,
                            Allergens = new[] { "badem" },
                            Description = "hardware Grocery, Kids & Kids open system",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Generic Metal Bacon",
                            PriceWithVat = 56.14416350431000m
                        },
                        new
                        {
                            Id = 54,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "lavender",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Unbranded Rubber Fish",
                            PriceWithVat = 543.515426359845000m
                        },
                        new
                        {
                            Id = 55,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "reboot",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Handcrafted Rubber Shirt",
                            PriceWithVat = 650.998427370097000m
                        },
                        new
                        {
                            Id = 56,
                            Allergens = new[] { "badem" },
                            Description = "Soft",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Awesome Plastic Fish",
                            PriceWithVat = 66.3635079126635000m
                        },
                        new
                        {
                            Id = 57,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Licensed Metal Mouse back-end",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Fantastic Frozen Soap",
                            PriceWithVat = 97.645391289911000m
                        },
                        new
                        {
                            Id = 58,
                            Allergens = new[] { "kikiriki" },
                            Description = "info-mediaries",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Handmade Granite Hat",
                            PriceWithVat = 321.549113058275000m
                        },
                        new
                        {
                            Id = 59,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "motivating recontextualize",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Practical Steel Cheese",
                            PriceWithVat = 49.2896992011413000m
                        },
                        new
                        {
                            Id = 60,
                            Allergens = new[] { "kikiriki" },
                            Description = "Fantastic Concrete Cheese next-generation",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Generic Concrete Hat",
                            PriceWithVat = 6.25116704322918000m
                        },
                        new
                        {
                            Id = 61,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "Ergonomic Plastic Soap Extensions RSS",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Incredible Metal Fish",
                            PriceWithVat = 568.300987392804000m
                        },
                        new
                        {
                            Id = 62,
                            Allergens = new[] { "kikiriki" },
                            Description = "Factors",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Fantastic Concrete Chicken",
                            PriceWithVat = 665.092521656813000m
                        },
                        new
                        {
                            Id = 63,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "Awesome Kenyan Shilling",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Small Concrete Bacon",
                            PriceWithVat = 661.15647911148000m
                        },
                        new
                        {
                            Id = 64,
                            Allergens = new[] { "badem" },
                            Description = "program payment",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Unbranded Frozen Pizza",
                            PriceWithVat = 676.874955965614000m
                        },
                        new
                        {
                            Id = 65,
                            Allergens = new[] { "kikiriki" },
                            Description = "Response Borders quantify",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Sleek Fresh Shirt",
                            PriceWithVat = 217.586628728354000m
                        },
                        new
                        {
                            Id = 66,
                            Allergens = new[] { "kikiriki" },
                            Description = "teal",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Tasty Fresh Chicken",
                            PriceWithVat = 126.783077664107000m
                        },
                        new
                        {
                            Id = 67,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Gorgeous Granite Towels withdrawal",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Practical Frozen Chair",
                            PriceWithVat = 423.95240274442000m
                        },
                        new
                        {
                            Id = 68,
                            Allergens = new[] { "badem" },
                            Description = "Plastic magenta",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Rustic Plastic Fish",
                            PriceWithVat = 761.231554095276000m
                        },
                        new
                        {
                            Id = 69,
                            Allergens = new[] { "badem" },
                            Description = "withdrawal",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Fantastic Fresh Shirt",
                            PriceWithVat = 29.7425314922549000m
                        },
                        new
                        {
                            Id = 70,
                            Allergens = new[] { "kikiriki" },
                            Description = "reintermediate methodologies Intranet",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Rustic Wooden Pizza",
                            PriceWithVat = 219.020170727288000m
                        },
                        new
                        {
                            Id = 71,
                            Allergens = new[] { "kikiriki" },
                            Description = "Enterprise-wide",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Incredible Wooden Shoes",
                            PriceWithVat = 348.602111147997000m
                        },
                        new
                        {
                            Id = 72,
                            Allergens = new[] { "kikiriki" },
                            Description = "Home Loan Account",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Handmade Frozen Ball",
                            PriceWithVat = 394.019497741954000m
                        },
                        new
                        {
                            Id = 73,
                            Allergens = new[] { "kikiriki" },
                            Description = "proactive",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Gorgeous Granite Bacon",
                            PriceWithVat = 189.642953309064000m
                        },
                        new
                        {
                            Id = 74,
                            Allergens = new[] { "kikiriki" },
                            Description = "navigate Syrian Arab Republic didactic",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Rustic Soft Shoes",
                            PriceWithVat = 187.480656051766000m
                        },
                        new
                        {
                            Id = 75,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "Palau Unbranded Frozen Shoes",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Incredible Steel Bacon",
                            PriceWithVat = 210.448388573922000m
                        },
                        new
                        {
                            Id = 76,
                            Allergens = new[] { "kikiriki", "lešnik" },
                            Description = "Ports auxiliary",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Handmade Granite Cheese",
                            PriceWithVat = 889.344430011392000m
                        },
                        new
                        {
                            Id = 77,
                            Allergens = new[] { "kikiriki" },
                            Description = "purple",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Ergonomic Fresh Mouse",
                            PriceWithVat = 846.641520898156000m
                        },
                        new
                        {
                            Id = 78,
                            Allergens = new[] { "badem", "lešnik" },
                            Description = "Rubber",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Licensed Rubber Chair",
                            PriceWithVat = 571.813557563263000m
                        },
                        new
                        {
                            Id = 79,
                            Allergens = new[] { "kikiriki" },
                            Description = "open architecture indigo deposit",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Unbranded Wooden Chips",
                            PriceWithVat = 399.6312350033000m
                        },
                        new
                        {
                            Id = 80,
                            Allergens = new[] { "kikiriki" },
                            Description = "compressing",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Gorgeous Frozen Chicken",
                            PriceWithVat = 255.524669892865000m
                        },
                        new
                        {
                            Id = 81,
                            Allergens = new[] { "kikiriki" },
                            Description = "Future Seychelles Rupee",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Handcrafted Frozen Soap",
                            PriceWithVat = 836.342681588764000m
                        },
                        new
                        {
                            Id = 82,
                            Allergens = new[] { "kikiriki" },
                            Description = "Bridge",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Gorgeous Granite Pizza",
                            PriceWithVat = 193.488714840956000m
                        },
                        new
                        {
                            Id = 83,
                            Allergens = new[] { "badem", "lešnik" },
                            Description = "circuit TCP",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Small Concrete Sausages",
                            PriceWithVat = 294.590179014294000m
                        },
                        new
                        {
                            Id = 84,
                            Allergens = new[] { "kikiriki" },
                            Description = "Oklahoma Refined Steel Mouse",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Ergonomic Metal Pizza",
                            PriceWithVat = 643.150511031575000m
                        },
                        new
                        {
                            Id = 85,
                            Allergens = new[] { "badem", "lešnik" },
                            Description = "plum Buckinghamshire data-warehouse",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Handcrafted Plastic Mouse",
                            PriceWithVat = 972.452411415266000m
                        },
                        new
                        {
                            Id = 86,
                            Allergens = new[] { "badem", "kikiriki" },
                            Description = "Soft Markets Vista",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Practical Granite Car",
                            PriceWithVat = 970.693345167997000m
                        },
                        new
                        {
                            Id = 87,
                            Allergens = new[] { "kikiriki", "lešnik" },
                            Description = "Cameroon Granite De-engineered",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Rustic Metal Pants",
                            PriceWithVat = 90.7269143921914000m
                        },
                        new
                        {
                            Id = 88,
                            Allergens = new[] { "kikiriki" },
                            Description = "input",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Licensed Steel Shirt",
                            PriceWithVat = 618.646073908846000m
                        },
                        new
                        {
                            Id = 89,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "Rubber Frozen",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Incredible Concrete Tuna",
                            PriceWithVat = 769.229780309475000m
                        },
                        new
                        {
                            Id = 90,
                            Allergens = new[] { "kikiriki", "lešnik" },
                            Description = "New Leu withdrawal azure",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Practical Rubber Tuna",
                            PriceWithVat = 432.989868537052000m
                        },
                        new
                        {
                            Id = 91,
                            Allergens = new[] { "lešnik" },
                            Description = "Hryvnia IB",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Incredible Granite Table",
                            PriceWithVat = 584.343535632055000m
                        },
                        new
                        {
                            Id = 92,
                            Allergens = new[] { "kikiriki" },
                            Description = "Burgs Gabon",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Licensed Granite Pants",
                            PriceWithVat = 6.58137165316444000m
                        },
                        new
                        {
                            Id = 93,
                            Allergens = new[] { "kikiriki" },
                            Description = "program",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Handcrafted Wooden Chips",
                            PriceWithVat = 647.891857497344000m
                        },
                        new
                        {
                            Id = 94,
                            Allergens = new[] { "lešnik" },
                            Description = "Neck",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Unbranded Concrete Bike",
                            PriceWithVat = 781.895902371917000m
                        },
                        new
                        {
                            Id = 95,
                            Allergens = new[] { "kikiriki" },
                            Description = "Cambridgeshire Lights Fantastic",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Sleek Fresh Salad",
                            PriceWithVat = 110.445494814983000m
                        },
                        new
                        {
                            Id = 96,
                            Allergens = new[] { "lešnik", "badem" },
                            Description = "indexing Advanced",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Refined Wooden Pants",
                            PriceWithVat = 448.965895664397000m
                        },
                        new
                        {
                            Id = 97,
                            Allergens = new[] { "kikiriki", "badem" },
                            Description = "orange",
                            IsPromo = true,
                            IsRecommended = true,
                            Name = "Intelligent Wooden Mouse",
                            PriceWithVat = 95.9425662159652000m
                        },
                        new
                        {
                            Id = 98,
                            Allergens = new[] { "kikiriki" },
                            Description = "Cambridgeshire product",
                            IsPromo = false,
                            IsRecommended = false,
                            Name = "Intelligent Rubber Keyboard",
                            PriceWithVat = 600.183340534653000m
                        },
                        new
                        {
                            Id = 99,
                            Allergens = new[] { "lešnik", "kikiriki" },
                            Description = "implementation navigate",
                            IsPromo = false,
                            IsRecommended = true,
                            Name = "Small Rubber Pizza",
                            PriceWithVat = 337.297884904453000m
                        },
                        new
                        {
                            Id = 100,
                            Allergens = new[] { "kikiriki" },
                            Description = "CFA Franc BEAC Baby RAM",
                            IsPromo = true,
                            IsRecommended = false,
                            Name = "Intelligent Metal Ball",
                            PriceWithVat = 676.162297686638000m
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("sub_categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Topli napici"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Vina"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Doručak"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Name = "Marlboro"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Piva"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Predjela"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Pall Mall"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Glavna jela"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Name = "Žestoka pića"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Name = "Bezalkoholna pića"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Name = "Paste"
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.Tables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsInUse")
                        .HasColumnName("is_in_use")
                        .HasColumnType("boolean");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnName("tag")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sto za nepušače",
                            IsInUse = false,
                            Tag = "Sto br. 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sto za pušače",
                            IsInUse = false,
                            Tag = "Sto br. 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sto za ručak",
                            IsInUse = false,
                            Tag = "Sto br. 3"
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.UserGroupMembers", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("UserGroupId")
                        .HasColumnName("user_group_id")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("UserId", "UserGroupId")
                        .HasName("pk_user_group_members");

                    b.HasIndex("UserGroupId");

                    b.ToTable("user_group_members");
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.UserGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("user_groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 10, 16, 21, 51, 33, 516, DateTimeKind.Local).AddTicks(8992),
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 10, 16, 21, 51, 33, 519, DateTimeKind.Local).AddTicks(7626),
                            Name = "MENADZER"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 10, 16, 21, 51, 33, 519, DateTimeKind.Local).AddTicks(7694),
                            Name = "KONOBAR"
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasColumnName("full_name")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dmilutinovic@gmail.com",
                            FullName = "Darko Milutinović",
                            Password = "$2a$10$yHj0aEM1PSZSGYfkQ3QvYe6REKDlnofPnfbUiVbfLIYnDj52WYiP6",
                            Username = "mdarco"
                        });
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.OrderItems", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.Orders", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("order_items_order_id_fkey")
                        .IsRequired();

                    b.HasOne("SmartCafe.Postgres.Models.Products", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("order_items_product_id_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.Orders", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.Tables", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .HasConstraintName("orders_table_id_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.ProductCategories", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.Categories", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("product_categories_category_id_fkey")
                        .IsRequired();

                    b.HasOne("SmartCafe.Postgres.Models.Products", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("product_categories_product_id_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.ProductSubCategories", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.Products", "Product")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("product_sub_categories_product_id_fkey")
                        .IsRequired();

                    b.HasOne("SmartCafe.Postgres.Models.SubCategories", "SubCategory")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("SubCategoryId")
                        .HasConstraintName("product_sub_categories_sub_category_id_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.SubCategories", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.Categories", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("product_sub_categories_category_id_fkey")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartCafe.Postgres.Models.UserGroupMembers", b =>
                {
                    b.HasOne("SmartCafe.Postgres.Models.UserGroups", "UserGroup")
                        .WithMany("UserGroupMembers")
                        .HasForeignKey("UserGroupId")
                        .HasConstraintName("fk_user_group_id")
                        .IsRequired();

                    b.HasOne("SmartCafe.Postgres.Models.Users", "User")
                        .WithMany("UserGroupMembers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_id")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
